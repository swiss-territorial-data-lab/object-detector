###################################
####### Inference detection ####### 
# Automatic detection of Quarries and Mineral Extraction Sites (MES) in images

# 1-Produce tiles geometry according to the AoI extent and zoom level
prepare_data.py: 
  srs: "EPSG:2056"                       # Projection of the input file
  datasets:
    labels_shapefile: ./data/AoI/AoI_2020.shp
  output_folder: ./output/output_det
  zoom_level: 16   

# 2-Fetch of tiles (online server) and split into 3 datasets: train, test, validation
generate_tilesets.py:
  debug_mode: True # sample of tiles
  working_directory: output
  datasets:
    aoi_tiles_geojson: output_det/tiles.geojson
    orthophotos_web_service:
      type: XYZ     # supported values: 1. MIL = Map Image Layer 2. WMS 3. XYZ
      url: https://wmts.geo.admin.ch/1.0.0/ch.swisstopo.swissimage-product/default/2020/3857/{z}/{x}/{y}.jpeg
  output_folder: output_det
  tile_size: 256    # per side, in pixels
  overwrite: False
  n_jobs: 10
  COCO_metadata:
    year: 2021
    version: 1.0
    description: Swiss Image Hinterground w/ Quarries and Mineral Exploitation Sites detection
    contributor: swisstopo
    url: https://swisstopo.ch
    license:
      name: Unknown
      url:

# 3-Perform the object detection based on the optimized trained model
make_detections.py:
  working_directory: ./output/output_det
  log_subfolder: logs
  sample_tagged_img_subfolder: sample_tagged_images
  COCO_files:           # relative paths, w/ respect to the working_folder
    oth: COCO_oth.json
  detectron2_config_file: ../../detectron2_config_dqry.yaml # path relative to the working_folder
  model_weights:
    pth_file: ../output_trne/logs/model_0002999.pth # trained model minimizing the validation loss curve, monitor the training process via tensorboard (tensorboard --logdir </logs>) 
  image_metadata_json: img_metadata.json
  rdp_simplification:   # rdp = Ramer-Douglas-Peucker
    enabled: True
    epsilon: 2.0        # cf. https://rdp.readthedocs.io/en/latest/
  score_lower_threshold: 0.3

# 4-Filtering and merging detection polygons to improve results
filter_detections.py:
  year: 2020
  detections: ./output/output_det/oth_detections_at_0dot3_threshold.gpkg
  labels_shapefile: ./data/AoI/AoI_2020.shp
  dem: ./data/DEM/switzerland_dem_EPSG2056.tif
  elevation: 1200.0   # m, altitude threshold
  score: 0.95         # detection score (from 0 to 1) provided by detectron2
  distance: 10        # m, distance use as a buffer to merge close polygons (likely to belong to the same object) together
  area: 5000.0        # m2, area threshold under which polygons are discarded
  output: ./output/output_det/oth_detections_at_0dot3_threshold_year-{year}_score-{score}_area-{area}_elevation-{elevation}_distance-{distance}.geojson